<?php
/**
 * WidgetsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Adobe\ESign
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.4
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Adobe\ESign;

use \Adobe\ESign\Configuration;
use \Adobe\ESign\ApiException;
use \Adobe\ESign\ObjectSerializer;

/**
 * WidgetsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Adobe\ESign
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class WidgetsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createShareOnWidget
     *
     * Share a widget with someone..
     *
     */
    public function testCreateShareOnWidget()
    {
    }

    /**
     * Test case for createWidget
     *
     * Creates a widget and and returns the widgetId in the response to the client..
     *
     */
    public function testCreateWidget()
    {
    }

    /**
     * Test case for getAllDocumentsOfWidget
     *
     * Retrieves the IDs of the documents associated with widget..
     *
     */
    public function testGetAllDocumentsOfWidget()
    {
    }

    /**
     * Test case for getAllWidgetMembers
     *
     * Retrieves detailed member info along with IDs for different types of participants..
     *
     */
    public function testGetAllWidgetMembers()
    {
    }

    /**
     * Test case for getDocumentOfWidget
     *
     * Retrieves the file stream of a document of a widget..
     *
     */
    public function testGetDocumentOfWidget()
    {
    }

    /**
     * Test case for getWidgetAgreements
     *
     * Retrieves agreements for the widget..
     *
     */
    public function testGetWidgetAgreements()
    {
    }

    /**
     * Test case for getWidgetAllDocumentsImageUrls
     *
     * Retrieves image urls of all visible pages of a document associated with a widget..
     *
     */
    public function testGetWidgetAllDocumentsImageUrls()
    {
    }

    /**
     * Test case for getWidgetAuditTrail
     *
     * Retrieves the audit trail of a widget identified by widgetId..
     *
     */
    public function testGetWidgetAuditTrail()
    {
    }

    /**
     * Test case for getWidgetCombinedDocument
     *
     * Retrieves a single combined PDF document for the documents associated with a widget..
     *
     */
    public function testGetWidgetCombinedDocument()
    {
    }

    /**
     * Test case for getWidgetEvents
     *
     * Retrieves the events information for a widget..
     *
     */
    public function testGetWidgetEvents()
    {
    }

    /**
     * Test case for getWidgetFormData
     *
     * Retrieves data entered by the user into interactive form fields at the time they signed the widget.
     *
     */
    public function testGetWidgetFormData()
    {
    }

    /**
     * Test case for getWidgetInfo
     *
     * Retrieves the details of a widget..
     *
     */
    public function testGetWidgetInfo()
    {
    }

    /**
     * Test case for getWidgetNoteForApiUser
     *
     * Retrieves the latest note of a widget for the API user..
     *
     */
    public function testGetWidgetNoteForApiUser()
    {
    }

    /**
     * Test case for getWidgetParticipantSet
     *
     * Retrieves the participant set of a widget identified by widgetId in the path..
     *
     */
    public function testGetWidgetParticipantSet()
    {
    }

    /**
     * Test case for getWidgetSecurityOptionsForParticipation
     *
     * Retrieves the security options for a particular participant..
     *
     */
    public function testGetWidgetSecurityOptionsForParticipation()
    {
    }

    /**
     * Test case for getWidgetView
     *
     * Retrieves the requested views for a widget..
     *
     */
    public function testGetWidgetView()
    {
    }

    /**
     * Test case for getWidgets
     *
     * Retrieves widgets for a user..
     *
     */
    public function testGetWidgets()
    {
    }

    /**
     * Test case for updateWidget
     *
     * Updates a widget..
     *
     */
    public function testUpdateWidget()
    {
    }

    /**
     * Test case for updateWidgetNoteForApiUser
     *
     * Updates the latest note of a widget for the API user..
     *
     */
    public function testUpdateWidgetNoteForApiUser()
    {
    }

    /**
     * Test case for updateWidgetSecurityOptionsForParticipation
     *
     * Updates the security options for a particular participant..
     *
     */
    public function testUpdateWidgetSecurityOptionsForParticipation()
    {
    }

    /**
     * Test case for updateWidgetState
     *
     * Updates the state of a widget identified by widgetId in the path..
     *
     */
    public function testUpdateWidgetState()
    {
    }

    /**
     * Test case for updateWidgetVisibility
     *
     * Updates the visibility of widget..
     *
     */
    public function testUpdateWidgetVisibility()
    {
    }
}
