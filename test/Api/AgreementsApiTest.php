<?php
/**
 * AgreementsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Adobe\ESign\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.0
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Adobe\ESign\;

use \Adobe\ESign\\Configuration;
use \Adobe\ESign\\ApiException;
use \Adobe\ESign\\ObjectSerializer;

/**
 * AgreementsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Adobe\ESign\
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AgreementsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for addTemplateFieldsToAgreement
     *
     * Adds template fields to an agreement.
     *
     */
    public function testAddTemplateFieldsToAgreement()
    {
    }

    /**
     * Test case for createAgreement
     *
     * Creates an agreement. Sends it out for signatures, and returns the agreementID in the response to the client..
     *
     */
    public function testCreateAgreement()
    {
    }

    /**
     * Test case for createAgreementView
     *
     * Retrieves the latest state view url of agreement..
     *
     */
    public function testCreateAgreementView()
    {
    }

    /**
     * Test case for createDelegatedParticipantSets
     *
     * Creates a participantSet to which the agreement is forwarded for taking appropriate action..
     *
     */
    public function testCreateDelegatedParticipantSets()
    {
    }

    /**
     * Test case for createReminderOnParticipant
     *
     * Creates a reminder on the specified participants of an agreement identified by agreementId in the path..
     *
     */
    public function testCreateReminderOnParticipant()
    {
    }

    /**
     * Test case for createShareOnAgreement
     *
     * Share an agreement with someone..
     *
     */
    public function testCreateShareOnAgreement()
    {
    }

    /**
     * Test case for deleteDocuments
     *
     * Deletes all the documents of an agreement..
     *
     */
    public function testDeleteDocuments()
    {
    }

    /**
     * Test case for getAgreementInfo
     *
     * Retrieves the current status of an agreement..
     *
     */
    public function testGetAgreementInfo()
    {
    }

    /**
     * Test case for getAgreementNoteForApiUser
     *
     * Retrieves the latest note associated with an agreement..
     *
     */
    public function testGetAgreementNoteForApiUser()
    {
    }

    /**
     * Test case for getAgreementReminder
     *
     * Retrieves a specific reminder associated with an agreement.
     *
     */
    public function testGetAgreementReminder()
    {
    }

    /**
     * Test case for getAgreementReminders
     *
     * Retrieves the reminders of an agreement, identified by agreementId in the path..
     *
     */
    public function testGetAgreementReminders()
    {
    }

    /**
     * Test case for getAgreements
     *
     * Retrieves agreements for the user..
     *
     */
    public function testGetAgreements()
    {
    }

    /**
     * Test case for getAllDocuments
     *
     * Retrieves the IDs of the documents of an agreement identified by agreementId..
     *
     */
    public function testGetAllDocuments()
    {
    }

    /**
     * Test case for getAllDocumentsImageUrls
     *
     * Retrieves image urls of all visible pages of all the documents associated with an agreement..
     *
     */
    public function testGetAllDocumentsImageUrls()
    {
    }

    /**
     * Test case for getAllMembers
     *
     * Retrieves information of members of the agreement..
     *
     */
    public function testGetAllMembers()
    {
    }

    /**
     * Test case for getAuditTrail
     *
     * Retrieves the audit trail of an agreement identified by agreementId..
     *
     */
    public function testGetAuditTrail()
    {
    }

    /**
     * Test case for getCombinedDocument
     *
     * Retrieves a single combined PDF document for the documents associated with an agreement..
     *
     */
    public function testGetCombinedDocument()
    {
    }

    /**
     * Test case for getCombinedDocumentPagesInfo
     *
     * Retrieves info of all pages of a combined PDF document for the documents associated with an agreement..
     *
     */
    public function testGetCombinedDocumentPagesInfo()
    {
    }

    /**
     * Test case for getCombinedDocumentUrl
     *
     * Retrieves url of all visible pages of all the documents associated with an agreement..
     *
     */
    public function testGetCombinedDocumentUrl()
    {
    }

    /**
     * Test case for getDocument
     *
     * Retrieves the file stream of a document of an agreement..
     *
     */
    public function testGetDocument()
    {
    }

    /**
     * Test case for getDocumentImageUrls
     *
     * Retrieves image urls of all visible pages of a document associated with an agreement..
     *
     */
    public function testGetDocumentImageUrls()
    {
    }

    /**
     * Test case for getEvents
     *
     * Retrieves the events information for an agreement..
     *
     */
    public function testGetEvents()
    {
    }

    /**
     * Test case for getFormData
     *
     * Retrieves data entered into the interactive form fields of the agreement..
     *
     */
    public function testGetFormData()
    {
    }

    /**
     * Test case for getFormFields
     *
     * Retrieves details of form fields of an agreement..
     *
     */
    public function testGetFormFields()
    {
    }

    /**
     * Test case for getMergeInfo
     *
     * Retrieves the merge info stored with an agreement..
     *
     */
    public function testGetMergeInfo()
    {
    }

    /**
     * Test case for getParticipantSet
     *
     * Retrieves the participant set of an agreement identified by agreementId in the path..
     *
     */
    public function testGetParticipantSet()
    {
    }

    /**
     * Test case for getSigningUrl
     *
     * Retrieves the URL for the e-sign page for the current signer(s) of an agreement..
     *
     */
    public function testGetSigningUrl()
    {
    }

    /**
     * Test case for rejectAgreementForParticipation
     *
     * Rejects the agreement for a participant..
     *
     */
    public function testRejectAgreementForParticipation()
    {
    }

    /**
     * Test case for updateAgreement
     *
     * Updates the agreement in draft state, or update the expirationTime on an existing agreement that is already out for signature..
     *
     */
    public function testUpdateAgreement()
    {
    }

    /**
     * Test case for updateAgreementMergeInfo
     *
     * Set the merge info for an agreement..
     *
     */
    public function testUpdateAgreementMergeInfo()
    {
    }

    /**
     * Test case for updateAgreementNoteForApiUser
     *
     * Updates the latest note associated with an agreement..
     *
     */
    public function testUpdateAgreementNoteForApiUser()
    {
    }

    /**
     * Test case for updateAgreementReminder
     *
     * Updates an existing reminder for an agreement.
     *
     */
    public function testUpdateAgreementReminder()
    {
    }

    /**
     * Test case for updateAgreementState
     *
     * Updates the state of an agreement identified by agreementId in the path..
     *
     */
    public function testUpdateAgreementState()
    {
    }

    /**
     * Test case for updateAgreementVisibility
     *
     * Updates the visibility of an agreement..
     *
     */
    public function testUpdateAgreementVisibility()
    {
    }

    /**
     * Test case for updateFormFields
     *
     * Updates form fields of an agreement..
     *
     */
    public function testUpdateFormFields()
    {
    }

    /**
     * Test case for updateParticipantSet
     *
     * Updates the participant set of an agreement identified by agreementId in the path..
     *
     */
    public function testUpdateParticipantSet()
    {
    }
}
